'''********************* بسم الله الرحمن الرحيم ***********************'''
 
def listinp(): #list of integers
    return list(map(int,input().split()))
def mulinp(): #consecutive integers
    return map(int,input().split())
def mulstr(): #consecutive str
    return map(str,input().split())
def strlist():  #str list
    return list(input())
def intinp():  #integer 
    return int(input())
def inp():   #string
    return input()
 
from collections import defaultdict,deque,Counter
from bisect import bisect_left,bisect_right
from heapq import heappop,heappush,heapify
from math import ceil,isqrt,gcd
from copy import deepcopy
def bfs(i,j,fi,fj,n,m,grid):
    vis = set()
    pos = [(0,1),(1,0),(-1,0),(0,-1)]
    vis.add((i,j))
    q = deque([(i,j)])
    while q:
        r,c = q.popleft()
        if r == fi and c == fj:return True
        for R,C in pos:
            nr,nc = r+R,c+C
            if 0<=nr<n and 0<=nc<m and (nr,nc) not in vis and (grid[nr][nc] != 'X' or (nr,nc) == (fi,fj)):
                vis.add((nr,nc))
                q.append((nr,nc))
    return False
 
def solution():
    n,m = mulinp()
    grid = []
    for i in range(n):
        grid.append(strlist())
    sr,sc = mulinp()
    er,ec = mulinp()
    nbrs = grid[er-1][ec-1] == 'X'
    grid[sr-1][sc-1] = grid[er - 1][ec - 1] = "."

    if bfs(sr-1,sc-1,er-1,ec-1,n,m,grid):
        pos = [(0,1),(1,0),(-1,0),(0,-1)]
        for R,C in pos:
            nr,nc = (er-1)+R,(ec-1)+C
            if 0<=nr<n and 0<=nc<m and grid[nr][nc] == '.':nbrs +=1
            if nbrs == 2:print('YES');return
        print('NO')
    else:
        print('NO')
solution()
